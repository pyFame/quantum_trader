name: Conda

on:
  push:
    branches:
      - '*'

  pull_request:
    branches:
      - '*'

  schedule:
    - cron: '0 */10 * * *'

concurrency:
  group: ${{ github.head_ref || github.run_id }}-conda
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency: 8
    strategy:
      max-parallel: 3
      fail-fast: true
      matrix:
        arch: [ x64]#, arm, arm64 ]

        include:
          - os: ubuntu-latest
            label: linux-64
            prefix: /usr/share/miniconda3/envs/my-env

    #          - os: macos-latest
    #            label: osx-64
    #            prefix: /Users/runner/miniconda3/envs/my-env
    #
    #          - os: windows-latest
    #            label: win-64
    #            prefix: C:\Miniconda3\envs\my-env

    steps:
      - uses: actions/checkout@v3

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: my-env
          use-mamba: true

      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - uses: actions/cache@v2
        with:
          path: |
            ${{ matrix.prefix }}

          key: ${{ matrix.label }}-conda-${{ hashFiles('environment.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        id: cache

      - name: Update environment
        run: |
          mamba env update -f environment.yml
          if: steps.cache.outputs.cache-hit != 'true'

      - name: Install dependencies
        run: |
          #mkdir -p env/hiro
          #conda env create --name hiro -f environment.yml --prefix conda/env
          #conda install -c conda-forge ta-lib
          python -m pip install --upgrade pip
          #python -m pip install -r  requirements.txt
          # conda env update --file environment.yml --name base

      - name: Lint with flake8
        run: |
          echo "linting bypassed"
      #        conda install flake8
      #        # stop the build if there are Python syntax errors or undefined names
      #        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics


  test:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v3
      - name: Test
        run: |
          pytest --ignore=lib/

  test-intensive:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v3
      - name: Test Intensive
        run: |
          pytest

#      https://dev.to/epassaro/caching-anaconda-environments-in-github-actions-5hde