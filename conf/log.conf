
; https://docs.python.org/3/library/logging.config.html#logging-config-fileformat
[loggers]
keys=root,app,strategy_producer,trader,order_consumer

[handlers]
keys=console,handF,handF_DEBUG,handF_WARN,handF_ERROR,handF_CRITICAL,appHandF,appHandF_DEBUG,appHandF_WARN,appHandF_ERROR,appHandF_CRITICAL,strategyHandF,traderHandF,orderHandF

[formatters]
keys=form1

[logger_root]
level=NOTSET
handlers=console,handF,handF_DEBUG,handF_WARN,handF_ERROR,handF_CRITICAL

[logger_app]
level=DEBUG
propagate=0
qualname=app
handlers=console,appHandF,appHandF_DEBUG,appHandF_WARN,appHandF_ERROR,appHandF_CRITICAL

[logger_strategy_producer]
level=DEBUG
handlers=console,strategyHandF
qualname=strategy_producer
propagate=0

[logger_trader]
level=DEBUG
handlers=console,traderHandF
qualname=trader
propagate=0

[logger_order_consumer]
level=DEBUG
handlers=console,orderHandF
qualname=order_consumer
propagate=0

[handler_strategyHandF]
class=FileHandler
level=DEBUG
formatter=form1
args=('logs/strategy.log','a')

[handler_orderHandF]
class=FileHandler
level=DEBUG
formatter=form1
args=('logs/order.log','a')

[handler_traderHandF]
class=FileHandler
level=DEBUG
formatter=form1
args=('logs/trader.log','a')

[handler_console]
class=StreamHandler
level=INFO
formatter=form1
args=(sys.stdout,)

[handler_console_warn]
class=StreamHandler
level=WARN
formatter=form1
args=(sys.stdout,)

[handler_handF]
class=FileHandler
level=INFO
formatter=form1
args=('logs/info.log','a')

[handler_handF_DEBUG]
class=FileHandler
level=DEBUG
formatter=form1
args=('logs/debug.log','a')

[handler_handF_WARN]
class=FileHandler
level=WARN
formatter=form1
args=('logs/warn.log','a')

[handler_handF_ERROR]
class=FileHandler
level=ERROR
formatter=form1
args=('logs/error.log','a')

[handler_handF_CRITICAL]
class=FileHandler
level=CRITICAL
formatter=form1
args=('logs/critical.log','a')

[handler_appHandF]
class=FileHandler
level=INFO
qualname=app
formatter=form1
args=('logs/app.log','a')

[handler_appHandF_DEBUG]
class=FileHandler
level=DEBUG
formatter=form1
args=('logs/app_debug.log','a')

[handler_appHandF_WARN]
class=FileHandler
level=WARN
formatter=form1
args=('logs/app_warn.log','a')

[handler_appHandF_ERROR]
class=FileHandler
level=ERROR
formatter=form1
args=('logs/app_error.log','a')

[handler_appHandF_CRITICAL]
class=FileHandler
level=CRITICAL
formatter=form1
args=('logs/app_critical.log','a')


[formatter_form1]
class=logging.Formatter
; format=%(asctime)s - %(levelname)s - %(message)s - (%(filename)s:%(lineno)d)
format={levelname} | {message} | {asctime} | {funcName}:{filename}:{lineno}
datefmt='%d-%m-%Y %H:%M:%S '
style={
; style=%
validate=True


; %(pathname)s Full pathname of the source file where the logging call was issued(if available).
;
; %(filename)s Filename portion of pathname.
;
; %(module)s Module (name portion of filename).
;
; %(funcName)s Name of function containing the logging call.
;
; %(lineno)d Source line number where the logging call was issued (if available).
;{process} pid

